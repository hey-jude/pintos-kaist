# -*- makefile -*-

SHELL = /bin/sh

VPATH = $(SRCDIR)

# We use apple silicon.
ifneq (0, $(shell expr `uname -s` : 'Darwin'))
  # cross compiler & binutils
  CC = x86_64-elf-gcc-7
  LD = x86_64-elf-ld
  OBJCOPY = x86_64-elf-objcopy
  AR = x86_64-elf-ar
  RANLIB = x86_64-elf-ranlib
else  # linux x86_64
  CC = gcc
  LD = ld
  OBJCOPY = objcopy
  AR = ar
  RANLIB = ranlib
endif

ifeq ($(strip $(shell command -v $(CC) 2> /dev/null)),)
$(warning *** Compiler ($(CC)) not found.  Did you set $$PATH properly?  Please refer to the Getting Started section in the documentation for details. ***)
endif

# Compiler and assembler invocation.
DEFINES =
WARNINGS = -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers
CFLAGS = -g -msoft-float -O0 -fno-omit-frame-pointer -mno-red-zone
CFLAGS += -mcmodel=large -fno-plt -fno-pic -mno-sse
CPPFLAGS = -nostdinc -I$(SRCDIR) -I$(SRCDIR)/include/lib -I$(SRCDIR)/include
CPPFLAGS += -I$(SRCDIR)/include/lib/kernel
ASFLAGS = -Wa,--gstabs -mcmodel=large
LDFLAGS = --no-relax
DEPS = -MMD -MF $(@:.o=.d)

# Turn off -fstack-protector, which we don't support.
ifeq ($(strip $(shell echo | $(CC) -fno-stack-protector -E - > /dev/null 2>&1; echo $$?)),0)
CFLAGS += -fno-stack-protector
endif

%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS) $(CPPFLAGS) $(WARNINGS) $(DEFINES) $(DEPS)

%.o: %.S
	$(CC) -c $< -o $@ $(ASFLAGS) $(CPPFLAGS) $(DEFINES) $(DEPS)
